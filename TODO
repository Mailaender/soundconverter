 
bugs:

 * better progress, in the statusbar
 * encoders as plugins 
 * optional "advanced" encoder settings
 * HIG compliant interface
 * handle exceptions even when they happen in callbacks
 * add support for GNOME encoding profiles ?
   GNOME profiles are "recording oriented", so maybe we need
   our own profile system. "lossless, voice, etc..."
 * bug: the program's options aren't printed with --help


 -ok- autotools, l12n
 -ok- give time estimates for progress bar
 -ok- progress dialog
 -ok- find a solution when no tags & filename generated from tags
 -ok- don't add dupplicate files 
 -ok- dropping a list a folder does not work as expected
 -ok- handle error when overwriting a file
 -ok- bug: the dialog can only be showed once
 -ok- use a raw quality setting
 -ok- display aprox. bitrate
 -ok- choose dir, add recursively input files that need to be converted

-------------------------------------------------------------------------------

 - change TaskQueue, for a better, multithreaded one.
 - change BackgroundTask not to use timeout(), but an event-based system.
 -ok- simplify the file/folder adding.
 - write test scripts

Only call gui stuff from main thread, but create threads to start Pipelines.
Call gui with gobject.idle_add()

When using threads with BackgroundTask, we have problems updating the UI...

------------------------------------------------------------------------------


  Et ne pas oublier la conversion en batch.
  -> objet queue global ?

ThreadedQueue
	size, expected_size, processed_size, thread_method, thread_numbers 	
	start(), stop()

	total_lenght, position

	utiliser Queue.Queue ?

Une queue pour chaque tache ? (typefind/tagread/converter)
Une queue global qui gère les 3 autres ?

La convertion doit pouvoir se lancer meme si les 2 queues précedentes n'ont pas fini, 
ConverterQueue doit attendre les autres.


Progression
===========
Apparement ça fonctionne avec juste le Converter
Testé avec 150+ fichiers divers vers ogg vorbis.

- progressbar
- statusbar
  better status handling, use it also when  reading types and tags.






